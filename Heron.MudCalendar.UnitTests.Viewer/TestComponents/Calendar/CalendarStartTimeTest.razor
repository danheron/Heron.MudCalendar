@inject IJSRuntime JsRuntime
@implements IAsyncDisposable

<MudCalendar T="CalendarItem" ShowMonth="false" DayStartTime="new TimeOnly(6, 15)"/>

<div class="cal-test-controls">
    <div class="cal-scroll-pos">@_scrollPos</div>
    <div class="cal-start-time">@_startTime</div>
    <button @onclick="GetScrollPosition">Get Scroll Position</button>
</div>

@code {

    public static string __description__ = "Calendar Day Start Time tests";

    private IJSObjectReference _jsModule;
    private int _scrollPos = 0;
    private string _startTime = "00:00";

    private const int MinutesInDay = 24 * 60;
    private const int PixelsInDay = 48 * 36;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);

        if (firstRender)
        {
            _jsModule = await JsRuntime.InvokeAsync<IJSObjectReference>("import", "/CalendarStartTimeTest.js");
        }
    }

    private async Task GetScrollPosition()
    {
        _scrollPos = await _jsModule.InvokeAsync<int>("getScrollPosition");

        var percent = (double)_scrollPos / PixelsInDay;
        var minutes = MinutesInDay * percent;
        var time = new TimeOnly(TimeSpan.FromMinutes(minutes).Ticks);
        _startTime = time.ToShortTimeString();
    }

    public async ValueTask DisposeAsync()
    {
        if (_jsModule != null) await _jsModule.DisposeAsync();
    }

}