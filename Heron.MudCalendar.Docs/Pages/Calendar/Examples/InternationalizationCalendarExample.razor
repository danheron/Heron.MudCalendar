@using System.Globalization
@using System.Reflection
@namespace Heron.MudCalendar.Docs.Examples

<MudCalendar T="CalendarItem" Culture="_currentCulture" />

<MudSelect T="CultureInfo" Class="mt-4" @bind-Value="_currentCulture" Label="Culture">
    <MudSelectItem Value="CultureInfo.CurrentCulture">
        Current Culture
    </MudSelectItem>
    <MudSelectItem Value="@CultureInfo.GetCultureInfo("en-US")">
        English (US) (en-US)
    </MudSelectItem>
    <MudSelectItem Value="@CultureInfo.GetCultureInfo("en-GB")">
        English (UK) (en-GB)
    </MudSelectItem>
    <MudSelectItem Value="@CultureInfo.GetCultureInfo("de-DE")">
        German (de-DE)
    </MudSelectItem>
    <MudSelectItem Value="GetPersianCulture()">
        Persian (fa-IR)
    </MudSelectItem>
</MudSelect>

@code {

    private CultureInfo _currentCulture = GetPersianCulture();

    public static CultureInfo GetPersianCulture()
    {
        var culture = new CultureInfo("fa-IR");
        var formatInfo = culture.DateTimeFormat;
        formatInfo.AbbreviatedDayNames = ["ی", "د", "س", "چ", "پ", "ج", "ش"];
        formatInfo.DayNames = ["یکشنبه", "دوشنبه", "سه شنبه", "چهار شنبه", "پنجشنبه", "جمعه", "شنبه"];
        var monthNames = new[]
        {
            "فروردین", "اردیبهشت", "خرداد", "تیر", "مرداد", "شهریور", "مهر", "آبان", "آذر", "دی", "بهمن",
            "اسفند",
            "",
        };
        formatInfo.AbbreviatedMonthNames =
            formatInfo.MonthNames =
                formatInfo.MonthGenitiveNames = formatInfo.AbbreviatedMonthGenitiveNames = monthNames;
        formatInfo.AMDesignator = "ق.ظ";
        formatInfo.PMDesignator = "ب.ظ";
        formatInfo.ShortDatePattern = "yyyy/MM/dd";
        formatInfo.LongDatePattern = "dddd, dd MMMM,yyyy";
        formatInfo.FirstDayOfWeek = DayOfWeek.Saturday;
        var cal = new PersianCalendar();
        var fieldInfo = culture.GetType().GetField("calendar", BindingFlags.NonPublic | BindingFlags.Instance);
        if (fieldInfo != null)
            fieldInfo.SetValue(culture, cal);
        var info = formatInfo.GetType().GetField("calendar", BindingFlags.NonPublic | BindingFlags.Instance);
        if (info != null)
            info.SetValue(formatInfo, cal);
        culture.NumberFormat.NumberDecimalSeparator = "/";
        culture.NumberFormat.DigitSubstitution = DigitShapes.NativeNational;
        culture.NumberFormat.NumberNegativePattern = 0;
        return culture;
    }

}